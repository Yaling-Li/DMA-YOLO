# YOLOv5 🚀 by Ultralytics, GPL-3.0 license

# Parameters
nc: 80  # number of classes
depth_multiple: 1  # model depth multiple
width_multiple: 1  # layer channel multiple
anchors:
  - [10,13, 16,30, 33,23]  # P3/8
  - [30,61, 62,45, 59,119]  # P4/16
  - [116,90, 156,198, 373,326]  # P5/32

# YOLOv5 v6.0 backbone
backbone:
  # [from, number, module, args]
  [[-1, 1, Conv, [64, 6, 2, 2]],  # 0-P1/2 将backbone替换为自校正卷积。提高小目标的检测效果
   [-1, 1, SCConv, [128, 2]],  # 1-P2/4  输出通道，最后一层filter的步长
   [-1, 3, C3, [128]],  # 2
   [-1, 1, SCConv, [256, 2]],  # 3-P3/8 输出通道，最后一层filter的步长
   [-1, 6, C3, [256]],  # 4   -------------------------------------use
   [-1, 1, SCConv, [512, 2]],  # 5-P4/16  输出通道，最后一层filter的步长
   [-1, 9, C3, [512]],  # 6   -------------------------------------use
   [-1, 1, SCConv, [1024, 2]],  # 7-P5/32 输出通道，最后一层filter的步长
   [-1, 3, C3, [1024]], # 8
   [-1, 1, CA, [1024]], # 9 加入CA注意力机制，关注粗分辨率的重点区域
   [-1, 1, SPPFCSPC, [1024]],  # 10   -----------------------------use
  ]

# YOLOv5 v6.0 BiFPN head
head:
  [[-1, 1, Conv, [512, 1, 1]],  # 11 改变通道数
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],  # 12 最近邻插值 nearest为mode名 /16
   [[-1, 6], 1, AdConcat2, [1]],  # 13 cat backbone P4 <--- BiFPN change 自适应加权融合
   [-1, 3, C3, [512, False]],  # 14   -----------------------------------------use

   [-1, 1, Conv, [256, 1, 1]],  # 15 改变通道数
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],  # 16  /8 上采样
   [[-1, 4], 1, AdConcat2, [1]],  # 17 cat backbone P3 <--- BiFPN change 自适应加权融合
   [-1, 3, C3STR, [256, False]],  # 18 (P3/8-small)    ---------------------------use

   [-1, 1, Conv, [256, 3, 2]],  # 19 下采样 /16
   [[-1, 14, 6], 1, AdConcat3, [1]],  # 20 cat P4 <--- BiFPN change 自适应加权融合
   [-1, 3, C3STR, [512, False]],  # 21 (P4/16-medium)   -----------------------use

   [-1, 1, Conv, [512, 3, 2]],  # 22 下采样 /32
   [[-1, 10], 1, AdConcat2, [1]],  # 23 cat head P5 <--- BiFPN change
   [-1, 3, C3STR, [1024, False]],  # 24 (P5/32-large)

   [[18, 21, 24], 1, Detect, [nc, anchors]],  # 25 Detect(P3, P4, P5)
  ]